server:
  context-path: /orders
  port: 5002
security:
  user:
      password: none
  oauth2:
      client:
        clientId: service
        accessTokenUri: http://auth-service:5000/auth/oauth/token
        grant-type: client_credentials
        scope: server
      resource:
        userInfoUri: http://auth-service:5000/auth/user
feign:
  oauth2:
    enabled: true

database:
    datasource:
        url: jdbc:postgresql://db:5432/orders?charSet=utf8&logUnclosedConnections=true
        username: postgres
        password: postgres
        driverClassName: org.postgresql.Driver
        maximumPoolSize: 50
        type: com.zaxxer.hikari.HikariDataSource
        hikari:
            data-source-properties:
                cachePrepStmts: true
                prepStmtCacheSize: 250
                prepStmtCacheSqlLimit: 2048
                useServerPrepStmts: true
                maxLifetime: 500
eureka:
  client:
    fetchRegistry: true
    region: default
    serviceUrl:
      defaultZone: http://registry-service:8761/eureka/
  instance:
     preferIpAddress: true

liquibase:
  change-log:
    classpath:db/changelog.yaml

spring:
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
      FAIL_ON_EMPTY_BEANS: false
  devtools:
     remote:
       secret: mysecret
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
    database: postgresql
    generate-ddl: false
    show_sql: true
    hibernate:
       ddl-auto: none
    properties:
       hibernate:
          dialect: org.hibernate.dialect.PostgreSQL94Dialect
  cloud:
      stream:
        kafka:
          binder:
            brokers: kafka
            defaultBrokerPort: 9093
            zk-nodes: zoo
        bindings:
          output:
            destination: order
            contentType: 'application/json'


